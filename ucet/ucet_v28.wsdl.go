// Code generated by wsdl2go. DO NOT EDIT.

package ucetsoapbinding

import (
	"github.com/fiorix/wsdl2go/soap"
)

// Namespace was auto-generated from WSDL.
var Namespace = "http://katastr.cuzk.cz/ucet/v2.8"

// NewUcet creates an initializes a Ucet.
func NewUcet(cli *soap.Client) Ucet {
	return &ucet{cli}
}

// Ucet was auto-generated from WSDL
// and defines interface for the remote service. Useful for testing.
type Ucet interface {
	// ZmenHeslo was auto-generated from WSDL.
	ZmenHeslo(ZmenHesloRequest *ZmenHesloRequest) (*ZmenHesloResponse, error)
}

// Operation wrapper for ZmenHeslo.
// OperationZmenHesloRequest was auto-generated from WSDL.
type OperationZmenHesloRequest struct {
	Input *ZmenHesloRequest `xml:"input,omitempty" json:"input,omitempty" yaml:"input,omitempty"`
}

// Operation wrapper for ZmenHeslo.
// OperationZmenHesloResponse was auto-generated from WSDL.
type OperationZmenHesloResponse struct {
	Output *ZmenHesloResponse `xml:"output,omitempty" json:"output,omitempty" yaml:"output,omitempty"`
}

// ucet implements the Ucet interface.
type ucet struct {
	cli *soap.Client
}

// ZmenHeslo was auto-generated from WSDL.
func (p *ucet) ZmenHeslo(ZmenHesloRequest *ZmenHesloRequest) (*ZmenHesloResponse, error) {
	α := struct {
		OperationZmenHesloRequest `xml:"tns:zmenHeslo"`
	}{
		OperationZmenHesloRequest{
			ZmenHesloRequest,
		},
	}

	γ := struct {
		OperationZmenHesloResponse `xml:"zmenHesloResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://katastr.cuzk.cz/ucet/zmenHeslo", α, &γ); err != nil {
		return nil, err
	}
	return γ.ZmenHesloResponse, nil
}
