// Code generated by wsdl2go. DO NOT EDIT.

package ctiossoapbinding

import (
	"github.com/fiorix/wsdl2go/soap"
)

// Namespace was auto-generated from WSDL.
var Namespace = "http://katastr.cuzk.cz/ctios/v2.8"

// NewCtios creates an initializes a Ctios.
func NewCtios(cli *soap.Client) Ctios {
	return &ctios{cli}
}

// Ctios was auto-generated from WSDL
// and defines interface for the remote service. Useful for testing.
type Ctios interface {
	// Ctios was auto-generated from WSDL.
	Ctios(CtiOsRequest *CtiOsRequest) (*CtiOsResponse, error)
}

// Operation wrapper for Ctios.
// OperationCtiOsRequest was auto-generated from WSDL.
type OperationCtiOsRequest struct {
	Input *CtiOsRequest `xml:"input,omitempty" json:"input,omitempty" yaml:"input,omitempty"`
}

// Operation wrapper for Ctios.
// OperationCtiOsResponse was auto-generated from WSDL.
type OperationCtiOsResponse struct {
	Output *CtiOsResponse `xml:"output,omitempty" json:"output,omitempty" yaml:"output,omitempty"`
}

// ctios implements the Ctios interface.
type ctios struct {
	cli *soap.Client
}

// Ctios was auto-generated from WSDL.
func (p *ctios) Ctios(CtiOsRequest *CtiOsRequest) (*CtiOsResponse, error) {
	α := struct {
		OperationCtiOsRequest `xml:"tns:ctios"`
	}{
		OperationCtiOsRequest{
			CtiOsRequest,
		},
	}

	γ := struct {
		OperationCtiOsResponse `xml:"ctiosResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://katastr.cuzk.cz/ctios/ctios", α, &γ); err != nil {
		return nil, err
	}
	return γ.CtiOsResponse, nil
}
