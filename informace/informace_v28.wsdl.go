// Code generated by wsdl2go. DO NOT EDIT.

package informacesoapbinding

import (
	"github.com/fiorix/wsdl2go/soap"
)

// Namespace was auto-generated from WSDL.
var Namespace = "http://katastr.cuzk.cz/informace/v2.8"

// NewInformace creates an initializes a Informace.
func NewInformace(cli *soap.Client) Informace {
	return &informace{cli}
}

// Informace was auto-generated from WSDL
// and defines interface for the remote service. Useful for testing.
type Informace interface {
	// DejInfoOJednotce was auto-generated from WSDL.
	DejInfoOJednotce(DejInfoOJednotceRequest *DejInfoOJednotceRequest) (*DejInfoOJednotceResponse, error)

	// DejMBRParcel was auto-generated from WSDL.
	DejMBRParcel(DejMBRParcelRequest *DejMBRParcelRequest) (*DejMBRParcelResponse, error)

	// DejNahledLV was auto-generated from WSDL.
	DejNahledLV(DejNahledLVRequest *DejNahledLVRequest) (*DejNahledLVResponse, error)
}

// Operation wrapper for DejInfoOJednotce.
// OperationDejInfoOJednotceRequest was auto-generated from WSDL.
type OperationDejInfoOJednotceRequest struct {
	Input *DejInfoOJednotceRequest `xml:"input,omitempty" json:"input,omitempty" yaml:"input,omitempty"`
}

// Operation wrapper for DejInfoOJednotce.
// OperationDejInfoOJednotceResponse was auto-generated from WSDL.
type OperationDejInfoOJednotceResponse struct {
	Output *DejInfoOJednotceResponse `xml:"output,omitempty" json:"output,omitempty" yaml:"output,omitempty"`
}

// Operation wrapper for DejMBRParcel.
// OperationDejMBRParcelRequest was auto-generated from WSDL.
type OperationDejMBRParcelRequest struct {
	Input *DejMBRParcelRequest `xml:"input,omitempty" json:"input,omitempty" yaml:"input,omitempty"`
}

// Operation wrapper for DejMBRParcel.
// OperationDejMBRParcelResponse was auto-generated from WSDL.
type OperationDejMBRParcelResponse struct {
	Output *DejMBRParcelResponse `xml:"output,omitempty" json:"output,omitempty" yaml:"output,omitempty"`
}

// Operation wrapper for DejNahledLV.
// OperationDejNahledLVRequest was auto-generated from WSDL.
type OperationDejNahledLVRequest struct {
	Input *DejNahledLVRequest `xml:"input,omitempty" json:"input,omitempty" yaml:"input,omitempty"`
}

// Operation wrapper for DejNahledLV.
// OperationDejNahledLVResponse was auto-generated from WSDL.
type OperationDejNahledLVResponse struct {
	Output *DejNahledLVResponse `xml:"output,omitempty" json:"output,omitempty" yaml:"output,omitempty"`
}

// informace implements the Informace interface.
type informace struct {
	cli *soap.Client
}

// DejInfoOJednotce was auto-generated from WSDL.
func (p *informace) DejInfoOJednotce(DejInfoOJednotceRequest *DejInfoOJednotceRequest) (*DejInfoOJednotceResponse, error) {
	α := struct {
		OperationDejInfoOJednotceRequest `xml:"tns:dejInfoOJednotce"`
	}{
		OperationDejInfoOJednotceRequest{
			DejInfoOJednotceRequest,
		},
	}

	γ := struct {
		OperationDejInfoOJednotceResponse `xml:"dejInfoOJednotceResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://katastr.cuzk.cz/informace/dejInfoOJednotce", α, &γ); err != nil {
		return nil, err
	}
	return γ.DejInfoOJednotceResponse, nil
}

// DejMBRParcel was auto-generated from WSDL.
func (p *informace) DejMBRParcel(DejMBRParcelRequest *DejMBRParcelRequest) (*DejMBRParcelResponse, error) {
	α := struct {
		OperationDejMBRParcelRequest `xml:"tns:dejMBRParcel"`
	}{
		OperationDejMBRParcelRequest{
			DejMBRParcelRequest,
		},
	}

	γ := struct {
		OperationDejMBRParcelResponse `xml:"dejMBRParcelResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://katastr.cuzk.cz/informace/dejMBRParcel", α, &γ); err != nil {
		return nil, err
	}
	return γ.DejMBRParcelResponse, nil
}

// DejNahledLV was auto-generated from WSDL.
func (p *informace) DejNahledLV(DejNahledLVRequest *DejNahledLVRequest) (*DejNahledLVResponse, error) {
	α := struct {
		OperationDejNahledLVRequest `xml:"tns:dejNahledLV"`
	}{
		OperationDejNahledLVRequest{
			DejNahledLVRequest,
		},
	}

	γ := struct {
		OperationDejNahledLVResponse `xml:"dejNahledLVResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("http://katastr.cuzk.cz/informace/dejNahledLV", α, &γ); err != nil {
		return nil, err
	}
	return γ.DejNahledLVResponse, nil
}
